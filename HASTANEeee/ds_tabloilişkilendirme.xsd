<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="ds_tabloilişkilendirme" targetNamespace="http://tempuri.org/ds_tabloilişkilendirme.xsd" xmlns:mstns="http://tempuri.org/ds_tabloilişkilendirme.xsd" xmlns="http://tempuri.org/ds_tabloilişkilendirme.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="tablo_ilişkilendirmeConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="tablo_ilişkilendirmeConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.HASTANEeee.Properties.Settings.GlobalReference.Default.tablo_ilişkilendirmeConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="doktorlarTableAdapter" GeneratorDataComponentClassName="doktorlarTableAdapter" Name="doktorlar" UserDataComponentName="doktorlarTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="tablo_ilişkilendirmeConnectionString (Settings)" DbObjectName="[tablo ilişkilendirme].dbo.doktorlar" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[doktorlar] WHERE (((@IsNull_poliklinikID = 1 AND [poliklinikID] IS NULL) OR ([poliklinikID] = @Original_poliklinikID)) AND ([doktorID] = @Original_doktorID) AND ((@IsNull_doktorAdiSoyadi = 1 AND [doktorAdiSoyadi] IS NULL) OR ([doktorAdiSoyadi] = @Original_doktorAdiSoyadi)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_doktorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doktorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_doktorAdiSoyadi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doktorAdiSoyadi" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_doktorAdiSoyadi" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="doktorAdiSoyadi" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[doktorlar] ([poliklinikID], [doktorAdiSoyadi]) VALUES (@poliklinikID, @doktorAdiSoyadi);
SELECT poliklinikID, doktorID, doktorAdiSoyadi FROM doktorlar WHERE (doktorID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@doktorAdiSoyadi" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="doktorAdiSoyadi" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT poliklinikID, doktorID, doktorAdiSoyadi FROM dbo.doktorlar</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[doktorlar] SET [poliklinikID] = @poliklinikID, [doktorAdiSoyadi] = @doktorAdiSoyadi WHERE (((@IsNull_poliklinikID = 1 AND [poliklinikID] IS NULL) OR ([poliklinikID] = @Original_poliklinikID)) AND ([doktorID] = @Original_doktorID) AND ((@IsNull_doktorAdiSoyadi = 1 AND [doktorAdiSoyadi] IS NULL) OR ([doktorAdiSoyadi] = @Original_doktorAdiSoyadi)));
SELECT poliklinikID, doktorID, doktorAdiSoyadi FROM doktorlar WHERE (doktorID = @doktorID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@doktorAdiSoyadi" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="doktorAdiSoyadi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_doktorID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doktorID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_doktorAdiSoyadi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="doktorAdiSoyadi" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_doktorAdiSoyadi" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="doktorAdiSoyadi" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="doktorID" ColumnName="doktorID" DataSourceName="[tablo ilişkilendirme].dbo.doktorlar" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@doktorID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="doktorID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="poliklinikID" DataSetColumn="poliklinikID" />
              <Mapping SourceColumn="doktorID" DataSetColumn="doktorID" />
              <Mapping SourceColumn="doktorAdiSoyadi" DataSetColumn="doktorAdiSoyadi" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="polikliniklerTableAdapter" GeneratorDataComponentClassName="polikliniklerTableAdapter" Name="poliklinikler" UserDataComponentName="polikliniklerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="tablo_ilişkilendirmeConnectionString (Settings)" DbObjectName="[tablo ilişkilendirme].dbo.poliklinikler" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[poliklinikler] WHERE (([poliklinikID] = @Original_poliklinikID) AND ((@IsNull_poliklinikAdi = 1 AND [poliklinikAdi] IS NULL) OR ([poliklinikAdi] = @Original_poliklinikAdi)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_poliklinikAdi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikAdi" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_poliklinikAdi" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="poliklinikAdi" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[poliklinikler] ([poliklinikAdi]) VALUES (@poliklinikAdi);
SELECT poliklinikID, poliklinikAdi FROM poliklinikler WHERE (poliklinikID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@poliklinikAdi" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="poliklinikAdi" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT poliklinikID, poliklinikAdi FROM dbo.poliklinikler</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[poliklinikler] SET [poliklinikAdi] = @poliklinikAdi WHERE (([poliklinikID] = @Original_poliklinikID) AND ((@IsNull_poliklinikAdi = 1 AND [poliklinikAdi] IS NULL) OR ([poliklinikAdi] = @Original_poliklinikAdi)));
SELECT poliklinikID, poliklinikAdi FROM poliklinikler WHERE (poliklinikID = @poliklinikID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@poliklinikAdi" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="poliklinikAdi" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_poliklinikAdi" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="poliklinikAdi" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_poliklinikAdi" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="poliklinikAdi" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="poliklinikID" ColumnName="poliklinikID" DataSourceName="[tablo ilişkilendirme].dbo.poliklinikler" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@poliklinikID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="poliklinikID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="poliklinikID" DataSetColumn="poliklinikID" />
              <Mapping SourceColumn="poliklinikAdi" DataSetColumn="poliklinikAdi" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="ds_tabloilişkilendirme" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="ds_tabloilişkilendirme" msprop:Generator_DataSetName="ds_tabloilişkilendirme">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="doktorlar" msprop:Generator_RowEvHandlerName="doktorlarRowChangeEventHandler" msprop:Generator_RowDeletedName="doktorlarRowDeleted" msprop:Generator_RowDeletingName="doktorlarRowDeleting" msprop:Generator_RowEvArgName="doktorlarRowChangeEvent" msprop:Generator_TablePropName="doktorlar" msprop:Generator_RowChangedName="doktorlarRowChanged" msprop:Generator_RowChangingName="doktorlarRowChanging" msprop:Generator_TableClassName="doktorlarDataTable" msprop:Generator_RowClassName="doktorlarRow" msprop:Generator_TableVarName="tabledoktorlar" msprop:Generator_UserTableName="doktorlar">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="poliklinikID" msprop:Generator_ColumnPropNameInRow="poliklinikID" msprop:Generator_ColumnPropNameInTable="poliklinikIDColumn" msprop:Generator_ColumnVarNameInTable="columnpoliklinikID" msprop:Generator_UserColumnName="poliklinikID" type="xs:int" minOccurs="0" />
              <xs:element name="doktorID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="doktorID" msprop:Generator_ColumnPropNameInTable="doktorIDColumn" msprop:Generator_ColumnVarNameInTable="columndoktorID" msprop:Generator_UserColumnName="doktorID" type="xs:int" />
              <xs:element name="doktorAdiSoyadi" msprop:Generator_ColumnPropNameInRow="doktorAdiSoyadi" msprop:Generator_ColumnPropNameInTable="doktorAdiSoyadiColumn" msprop:Generator_ColumnVarNameInTable="columndoktorAdiSoyadi" msprop:Generator_UserColumnName="doktorAdiSoyadi" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="poliklinikler" msprop:Generator_RowEvHandlerName="polikliniklerRowChangeEventHandler" msprop:Generator_RowDeletedName="polikliniklerRowDeleted" msprop:Generator_RowDeletingName="polikliniklerRowDeleting" msprop:Generator_RowEvArgName="polikliniklerRowChangeEvent" msprop:Generator_TablePropName="poliklinikler" msprop:Generator_RowChangedName="polikliniklerRowChanged" msprop:Generator_RowChangingName="polikliniklerRowChanging" msprop:Generator_TableClassName="polikliniklerDataTable" msprop:Generator_RowClassName="polikliniklerRow" msprop:Generator_TableVarName="tablepoliklinikler" msprop:Generator_UserTableName="poliklinikler">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="poliklinikID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="poliklinikID" msprop:Generator_ColumnPropNameInTable="poliklinikIDColumn" msprop:Generator_ColumnVarNameInTable="columnpoliklinikID" msprop:Generator_UserColumnName="poliklinikID" type="xs:int" />
              <xs:element name="poliklinikAdi" msprop:Generator_ColumnPropNameInRow="poliklinikAdi" msprop:Generator_ColumnPropNameInTable="poliklinikAdiColumn" msprop:Generator_ColumnVarNameInTable="columnpoliklinikAdi" msprop:Generator_UserColumnName="poliklinikAdi" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:doktorlar" />
      <xs:field xpath="mstns:doktorID" />
    </xs:unique>
    <xs:unique name="poliklinikler_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:poliklinikler" />
      <xs:field xpath="mstns:poliklinikID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_doktorlar_poliklinikler" msdata:parent="poliklinikler" msdata:child="doktorlar" msdata:parentkey="poliklinikID" msdata:childkey="poliklinikID" msprop:Generator_UserParentTable="poliklinikler" msprop:Generator_UserChildTable="doktorlar" msprop:Generator_RelationVarName="relationFK_doktorlar_poliklinikler" msprop:Generator_UserRelationName="FK_doktorlar_poliklinikler" msprop:Generator_ChildPropName="GetdoktorlarRows" msprop:Generator_ParentPropName="polikliniklerRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>